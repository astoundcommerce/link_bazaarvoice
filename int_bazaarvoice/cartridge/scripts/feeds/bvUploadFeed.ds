/**
* bvUploadFeed.ds
*
*	@input Enabled : Boolean
*   @input File : dw.io.File
*	@input RemotePath : String
*	@input RemoteFileName : String
*
*   @output Message : String
*
*/
importPackage( dw.system );
importPackage( dw.io );

importScript( "int_bazaarvoice:/lib/libBazaarvoice.ds" );
importScript( "int_bazaarvoice:/lib/libConstants.ds" );

function execute( args : PipelineDictionary ) : Number
{
	args.Message = "";
	
	var Enabled : Boolean = args.Enabled;
	if (!Enabled) {
	   //If the feed isn't enabled, just return.
	   return PIPELET_NEXT;
	}
	
	var file : File = args.File;
	var name : String = args.RemoteFileName;
	var path : String = args.RemotePath;
		
	try {
		if(empty(path)) {
			throw new Error("Remote Path is empty!");
		}
		
		if(empty(name)) {
			throw new Error("Remote File Name is empty!");
		}
		
		if(file == null) {
			throw new Error("Local File is null!");
		}
		
		var bvHelper = getBazaarVoiceHelper();
	
		var ret : String = bvHelper.uploadFile(path, name, file, args);
        args.Message = ret;
	}
	catch(ex) {
		Logger.error("Exception caught during localized catalog upload: {0}", ex.message);
        args.Message = StringUtils.format(BV_Constants.MESSAGE_TEMPLATE,"ERROR", "Exception caught during localized catalog upload: " + ex.message, "", "", "", "", "");         
        return PIPELET_ERROR;
	}
	finally {
		if (file.exists()) {
            //file.remove();
        }
	}

	return PIPELET_NEXT;
}
