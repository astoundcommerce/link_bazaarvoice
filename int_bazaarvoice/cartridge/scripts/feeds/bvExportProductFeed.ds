/**
* 
* bvExportProductFeed.ds
*
* process feed for the BazaarVoice. The feed will be FTPed to the BV FTP server
* 
* Product & Catalog Feed to BV 
* 
* <?xml version="1.0" encoding="UTF-8"?> 
* <Feed xmlns="http://www.bazaarvoice.com/xs/PRR/ProductFeed/5.2" 
* 		  name="SiteName"
* 		  incremental="false"  
*		  extractDate="2007-01-01T12:00:00.000000"
*		  generator="demandware-r5.1.1">
*		<Categories>
*			<Category>
*				<ExternalId>1010</ExternalId>
*				<Name>First Category</Name>
*				<CategoryPageUrl>http://www.site.com/category.htm?cat=1010</CategoryPageUrl>
*				<ImageUrl>http://wcsp25.torolab.ibm.com/wcsstore/CAStoreA_TenantA_CatalogAssetStore/images/catalog/apparel/Sleepwear_sm.jpg</ImageUrl>
*				<CategoryPageUrls>
*					<CategoryPageUrl locale="en_US">http://www.site.com/en_US/category.htm?cat=1010</CategoryPageUrl>
*					<CategoryPageUrl locale="en_CA">http://www.site.com/en_CA/category.htm?cat=1010</CategoryPageUrl>
*					<CategoryPageUrl locale="fr_CA">http://www.site.com/fr_CA/category.htm?cat=1010</CategoryPageUrl>
*				</CategoryPageUrls>
*				<ImageUrls>
*					<ImageUrl locale="en_US">http://wcsp25.torolab.ibm.com/wcsstore/CAStoreA_TenantA_CatalogAssetStore/images/catalog/apparel/Sleepwear_sm.jpg</ImageUrl>
*					<ImageUrl locale="en_CA">http://wcsp25.torolab.ibm.com/wcsstore/CAStoreA_TenantA_CatalogAssetStore/images/catalog/apparel/Sleepwear_sm.jpg</ImageUrl>
*					<ImageUrl locale="fr_CA">http://wcsp25.torolab.ibm.com/wcsstore/CAStoreA_TenantA_CatalogAssetStore/images/catalog/apparel/Sleepwear_sm.jpg</ImageUrl>
*				</ImageUrls>
*			</Category>
*			..... 0-n categories
*		</Categories>
*		<Products>
*			<Product>
*				<ExternalId>2000001</ExternalId>
*				<Name>First Product</Name>
*				<Description>First Product Description Text</Description> 
*				<Brand>
*					<Name>ProductBrand</Name>
*					<ExternalId>ProductBrandId</ExternalId>
*				</Brand>
*				<CategoryExternalId>1010</CategoryExternalId>
*				<ProductPageUrl>http://www.site.com/product.htm?prod=2000001</ProductPageUrl>
*				<ImageUrl>http://images.site.com/prodimages/2000001.gif</ImageUrl>
*				<ManufacturerPartNumbers>
*					<ManufacturerPartNumber>
*					</ManufacturerPartNumber>
*				</ManufacturerPartNumbers> 
*				<EANs>
*					<EAN>
*					</EAN>
*				</EANs>
*				<Names>
*					<Name locale="en_US">Albini A-line Cotton Dress</Name>
*					<Name locale="en_CA">Albini A-line Cotton Dress</Name>
*					<Name locale="fr_CA">Robe coton Ã©vasÃ©e Albini</Name>
*				</Names>
*				<Descriptions>
*					<Description locale="en_US">Double-color casual short sleeve dress with soft collar</Description>
*					<Description locale="en_CA">Double-color casual short sleeve dress with soft collar</Description>
*					<Description locale="fr_CA">Robe manches courtes dÃ©contractÃ©e bicolore avec un joli dÃ©colletÃ©</Description>
*				</Descriptions>
*				<ProductPageUrls>
*					<ProductPageUrl locale="en_US">http://wcsp25.torolab.ibm.com/webapp/wcs/stores/servlet/en/storea/p/albini-a-line-cotton-dress</ProductPageUrl>
*					<ProductPageUrl locale="en_CA">http://wcsp25.torolab.ibm.com/webapp/wcs/stores/servlet/en-CA/storea/p/albini-a-line-cotton-dress</ProductPageUrl>
*					<ProductPageUrl locale="fr_CA">http://wcsp25.torolab.ibm.com/webapp/wcs/stores/servlet/fr-CA/storea/p/albini-a-line-cotton-dress</ProductPageUrl>
*				</ProductPageUrls>
*				<ImageUrls>
*					<ImageUrl locale="en_US">http://wcsp25.torolab.ibm.com/wcsstore/CAStoreA_TenantA_CatalogAssetStore/images/catalog/apparel/women/womens_dresses_160x160/WD_005_a_blue.jpg</ImageUrl>
*					<ImageUrl locale="en_CA">http://wcsp25.torolab.ibm.com/wcsstore/CAStoreA_TenantA_CatalogAssetStore/images/catalog/apparel/women/womens_dresses_160x160/WD_005_a_blue.jpg</ImageUrl>
*					<ImageUrl locale="fr_CA">http://wcsp25.torolab.ibm.com/wcsstore/CAStoreA_TenantA_CatalogAssetStore/images/catalog/apparel/women/womens_dresses_160x160/WD_005_a_blue.jpg</ImageUrl>				
*				</ImageUrls>				
*			</Product>
*			....... 0-n products
*		</Products>
*</Feed>
*
* @output Message : String
* @output File : dw.io.File
* @output RemotePath : String
* @output RemoteFileName : String
* @output Enabled : Boolean
*/
 
 importPackage( dw.system );
 importPackage( dw.order );
 importPackage( dw.util );
 importPackage( dw.web );
 importPackage( dw.net );
 importPackage( dw.catalog );
 importPackage( dw.object );
 importPackage( dw.io );
 importPackage( dw.content );
 
 importScript("int_bazaarvoice:/lib/libBazaarvoice.ds");
 importScript( "int_bazaarvoice:/lib/libConstants.ds" );
  
 var bvHelper = getBazaarVoiceHelper();
 
/**
 * Function: execute
 *
 * Main function of the script. 
 */
function execute( pdict : PipelineDictionary ) : Number {
	pdict.Message = "";
	
	var productFeedEnabled : Boolean = Site.getCurrent().getCustomPreferenceValue("bvEnableProductFeed_C2013");
	pdict.Enabled = productFeedEnabled;
	if (!productFeedEnabled) {
	   //If the feed isn't enabled, just return.
	   return PIPELET_NEXT;
	}
    
    var date : Date = new Date();
    var filename : String = "ProductFeed-" + date.getFullYear() + insertLeadingZero(date.getMonth()+1) + insertLeadingZero(date.getDate()+1) + insertLeadingZero(date.getHours()+1) + insertLeadingZero(date.getMinutes()+1) + insertLeadingZero(date.getMilliseconds()) + ".xml"; 
    var file : File = new File(File.TEMP + "/" + filename);
	pdict.File = file;
    
    try {
    	if(empty(bvHelper.getCustomerName())) {
    		throw new Error("Cannot retrieve customer name!");
    	}
        
        /* Create an output stream */
        var xsw : XMLStreamWriter = initFeed(file);
        
        /* Process categories */
        writeCategories(xsw);
        
        /* Process products */
        writeProducts(xsw);
        
        // Write the closing Feed element, then flush & close the stream
        finalizeFeed(xsw);
            
        var destinationPath : String = BV_Constants.ProductFeedPath;
        if(empty(destinationPath)){
        	Logger.error("BV_Constants.ProductFeedPath is null or empty!");
        	throw new Error("BV_Constants.ProductFeedPath is null or empty!");
        }
        pdict.RemotePath = destinationPath;
        
        var destinationFilename : String = BV_Constants.ProductFeedFilename;
        if(empty(destinationPath)){
        	Logger.error("BV_Constants.ProductFeedFilename is null or empty!");
        	throw new Error("BV_Constants.ProductFeedFilename is null or empty!");
        }
        pdict.RemoteFileName = destinationFilename;
        
        //var ret : String = bvHelper.uploadFile(destinationPath, destinationFilename, file, pdict);
        //pdict.Message = ret;
            
    } catch(ex) {
        Logger.error("Exception caught during catalog export: {0}", ex.message);
        pdict.Message = StringUtils.format(BV_Constants.MESSAGE_TEMPLATE,"ERROR", "Exception caught during catalog export: " + ex.message, "", "", "", "", "");         
        return PIPELET_ERROR;    
    }     
    
    return PIPELET_NEXT;    
}

//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//  Category
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

function writeCategories(xsw : XMLStreamWriter) {
    xsw.writeStartElement("Categories");
    var siteCatalog : Catalog = CatalogMgr.getSiteCatalog();
    var rootCategory : Category = siteCatalog.getRoot();
    var subRoots : Collection = rootCategory.getSubCategories();
    for each(var subRoot : Category in subRoots) {
        getCategory(xsw, subRoot);    
    }
    xsw.writeEndElement(); //</Categories>
}
function getCategory(xsw : XMLStreamWriter, category : Category) {
    writeCategory(xsw, category);
    var subCats : Collection = category.getSubCategories();
    if(subCats != null && subCats.size()>0)    {
        for each(var subCat : Category in subCats) {
            getCategory(xsw,subCat);
        }
    }
}
function writeCategory(xsw : XMLStreamWriter, category : Category){
    xsw.writeStartElement("Category");
    
    writeElement(xsw, "ExternalId", bvHelper.replaceIllegalCharacters(category.ID));
    
    var parent : Category = category.getParent();
    if(parent != null) {
        //We don't want to set our ParentExternalId to "root", so make sure the parent of this parent is non-null
        var parentOfParent = parent.getParent();    
        if(parentOfParent!=null) {
            writeElement(xsw, "ParentExternalId", parent.ID);
        }
    }
    
    writeElementCDATA(xsw, "Name", category.displayName);
    writeElement(xsw, "CategoryPageUrl", URLUtils.http('Search-Show','cgid',category.ID));
    
    xsw.writeEndElement();
}

//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//  Product
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

function writeProducts(xsw : XMLStreamWriter) {
    xsw.writeStartElement("Products");
    var productIterator : SeekableIterator = ProductMgr.queryAllSiteProducts();
    while(productIterator.hasNext()) {
        var product : Product = productIterator.next();
        if(product.online && product.searchable && !product.variant) {
            writeProduct(xsw, product);
        }
    }
    productIterator.close();
    xsw.writeEndElement();
}

function writeProduct(xsw : XMLStreamWriter, product : Product) {
    xsw.writeStartElement("Product");
    
    writeElement(xsw, "ExternalId", bvHelper.replaceIllegalCharacters(product.ID));
    writeElementCDATA(xsw, "Name", product.name);
    writeElementCDATA(xsw, "Description", (product.shortDescription == null ? product.name : product.shortDescription));
    
    if (product.getBrand() != null && !empty(product.brand) ) {
    	xsw.writeCharacters("\n");
    	xsw.writeStartElement("Brand");
        writeElementCDATA(xsw, "Name", product.brand);
        writeElementCDATA(xsw, "ExternalId", product.brand);
        xsw.writeEndElement();
    }
    
    var categoryExternalId : String = BV_Constants.CATEGORY_NONE;
    if(product.primaryCategory != null) {
        categoryExternalId = product.primaryCategory.ID;
    } else {
        var allCategories : Collection = product.allCategories;
        if(allCategories.size()>0) { 
            categoryExternalId = allCategories.iterator().next().ID;
        } 
    }
    writeElement(xsw, "CategoryExternalId", categoryExternalId);
    
    writeElement(xsw, "ProductPageUrl", URLUtils.http('Product-Show','pid',product.ID));
    
    var prodImage : String = bvHelper.getImageURL(product, BV_Constants.PRODUCT);
    if (!empty(prodImage)) {
    	writeElement(xsw, "ImageUrl", prodImage); 
    }
    
    //Manufacturer Part Number
    if(product.manufacturerSKU != null){
    	xsw.writeCharacters("\n");
    	xsw.writeStartElement("ManufacturerPartNumbers");
        writeElement(xsw, "ManufacturerPartNumber", product.manufacturerSKU);
        xsw.writeEndElement();
    }
    
    //European Article Number
    if(product.EAN != null && !empty(product.EAN)){
    	xsw.writeCharacters("\n");
    	xsw.writeStartElement("EANs");
        writeElement(xsw, "EAN", product.EAN);
        xsw.writeEndElement();
    }
    
    //Universal Product Code
    if(product.UPC != null && !empty(product.UPC)){
    	xsw.writeCharacters("\n");
    	xsw.writeStartElement("UPCs");
        writeElement(xsw, "UPC", product.UPC);
        xsw.writeEndElement();
    }
            
    
    xsw.writeEndElement();
}

//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//  Utility/Helper
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
function insertLeadingZero(nb : Number) : String {
    if(nb < 10) {
        return "0"+nb;
    } else {
        return ""+nb;
    }
}

function initFeed(file : File) : XMLStreamWriter {
    var fw : FileWriter = new FileWriter(file, "UTF-8", false);
    var xsw : XMLStreamWriter = new XMLStreamWriter(fw);
    
    //Create a string to represent the extraction date
    var date : Date = new Date();
    var extractDate : String = date.getFullYear()+"-"+insertLeadingZero(date.getMonth()+1)+"-"+insertLeadingZero(date.getDate())+"T00:00:00.000000"; 
    

	   xsw.writeStartDocument("UTF-8", "1.0");
	   xsw.writeCharacters("\n");
	   xsw.writeStartElement("Feed");
	   xsw.writeAttribute("xmlns", BV_Constants.XML_NAMESPACE_PRODUCT);
	   xsw.writeAttribute("name", bvHelper.getCustomerName());
	   xsw.writeAttribute("incremental", BV_Constants.XML_INCREMENTAL);
	   xsw.writeAttribute("extractDate", extractDate);
	   xsw.writeAttribute("generator", BV_Constants.XML_GENERATOR);

    
    return xsw;
}

function finalizeFeed(xsw : XMLStreamWriter) {
    xsw.writeEndElement();  //</Feed>
    xsw.writeEndDocument();
   
    xsw.flush();
    xsw.close();
}

function writeElement(xsw : XMLStreamWriter, elementName : String, chars : String) {
    xsw.writeStartElement(elementName);
    xsw.writeCharacters(chars);
    xsw.writeEndElement();
}

function writeElementCDATA(xsw : XMLStreamWriter, elementName : String, chars : String) {
    xsw.writeStartElement(elementName);
    xsw.writeCData(chars);
    xsw.writeEndElement();
}


