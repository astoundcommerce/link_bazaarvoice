/**
* GetLocaleAndCode.ds
* get dwlocale and bvlocale
*
* @input ValidCode : String
* @input BVLocalesIn : dw.util.HashMap
*
* @output BVLocalesOut : dw.util.HashMap
* @output DWLocale : String
*/
importPackage( dw.system );
importPackage( dw.util );

importScript( "int_bazaarvoice:/lib/libConstants.ds" );

function execute( pdict : PipelineDictionary ) : Number
{
	var validCode : String = pdict.ValidCode;
	var dwLocale : String = "";
	var bvLocale : String = "";
	var bvLocales : HashMap = pdict.BVLocalesIn;	
	
	validCode = validCode.replace(/^[\s]+|[\"]|[\s]+$/g,"");
	
	if(BV_Constants.regPair.test(validCode)){
   		var a = validCode.split(":");
   		a[0] = a[0].replace(/^[\s]+|[\s]+$/g,"");
		a[1] = a[1].replace(/^[\s]+|[\s]+$/g,"");
		
   		dwLocale = a[0];
   		bvLocale = a[1];
   		
   		//take out DZ if present
   		if(bvLocale.indexOf("/") != -1) {
   			bvLocale = bvLocale.split("/")[1];
   		}
   	}else if(BV_Constants.regFull.test(validCode)){
   		dwLocale = Site.getCurrent().defaultLocale;
   		bvLocale = validCode;    		
   	}
   	
   	if(!empty(bvLocale)){
	   	//var tmpLocale : String = bvLocale.substr(bvLocale.length - 5);
		//tmpLocale = tmpLocale.replace(/_[a-z]{2}(_[0-9a-zA-Z_]+)?/, tmpLocale.substr(2).toUpperCase());    
	   	bvLocales.put(dwLocale, bvLocale);
	}
   
   	pdict.DWLocale = dwLocale;
   	pdict.BVLocalesOut = bvLocales;
	
    return PIPELET_NEXT;
}
