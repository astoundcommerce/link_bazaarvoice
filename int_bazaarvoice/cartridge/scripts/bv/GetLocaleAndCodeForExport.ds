/**
* GetLocaleAndCode.ds
* get dwlocale and bvlocale
*
* @input ValidCode : String
* @input BVLocalesIn : dw.util.HashMap
*
* @output BVLocalesOut : dw.util.HashMap
* @output DWLocale : String
*/

var Logger = require('dw/system/Logger').getLogger('Bazaarvoice', 'GetLocaleAndCodeForExport.ds');
var Site = require('dw/system/Site');

var BV_Constants = require('int_bazaarvoice/cartridge/scripts/lib/libConstants').getConstants();

function execute(pdict) {
	var validCode = pdict.ValidCode;
	var dwLocale = '';
	var bvLocale = '';
	var bvLocales = pdict.BVLocalesIn;	
	
	validCode = validCode.replace(/^[\s]+|[\"]|[\s]+$/g, '');
   	
   	try {
		if(BV_Constants.regPair.test(validCode)) {
	   		var a = validCode.split(':');
	   		a[0] = a[0].replace(/^[\s]+|[\s]+$/g, '');
			a[1] = a[1].replace(/^[\s]+|[\s]+$/g, '');
			
	   		dwLocale = a[0];
	   		bvLocale = a[1];
	   		
	   		//take out DZ if present
	   		if(bvLocale.indexOf('/') != -1) {
	   			bvLocale = bvLocale.split('/')[1];
	   		}
	   	} else if(BV_Constants.regFull.test(validCode)) {
	   		dwLocale = Site.getCurrent().getDefaultLocale();
	   		bvLocale = validCode;   		   	
	   	}
	   	
		if(!empty(bvLocale)) {
		   	bvLocales.put(dwLocale, bvLocale);
		}
		
		pdict.DWLocale = dwLocale;
    	pdict.BVLocalesOut = bvLocales;
	
   	} catch(ex) {
   		Logger.error('Exception caught: ' + ex.message);
   		return PIPELET_ERROR;
   	}
   

   	
   	
    return PIPELET_NEXT;
}
