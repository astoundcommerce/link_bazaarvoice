{
    "step-types": {
    	"script-module-step": [{
		 	"@type-id":"custom.Bazaarvoice-Upload",
		    "@supports-parallel-execution":"false",
		    "@supports-site-context":"true",
		    "@supports-organization-context":"true",
		    "description":"Uploads feeds to the Bazaarvoice SFTP server.  Used for both product feeds and purchase feeds.",
		    "module":"int_bazaarvoice/cartridge/scripts/jobs/bvUploadFeeds.js",
		    "function":"execute",
		    "transactional":"false",
		    "timeout-in-seconds":"3600000",
		    "parameters":
		    {
		    	"parameter": [{
		          	"@name":"Enabled",
		          	"@type":"boolean",
		          	"@required":"false",
		          	"@trim":"false",
		          	"description":"Enable Upload of Product or Purchase Feed."
		          	}, {
		          	"@name":"FeedType",
		          	"@type":"string",
		          	"@required":"true",
		          	"@trim":"false",
		          	"description":"Product or Purchase Feed",
		          	"enum-values": {
		            	"value": [
		              		"Product",
		              		"Purchase"
		            	]
		          	}
		        }]
		    },
		    "status-codes": {
		    	"status":  [{
		        	"@code": "ERROR",
		            "description": "Used when the step failed with an error."
		        }, {
					"@code": "OK",
					"description": "Used when the step finished successfully."
				}]
			}
		}],
		
        "chunk-script-module-step": [
            {
                "@type-id": "custom.Bazaarvoice-Product-Feed-Export",
                "@supports-parallel-execution": "false",
                "@supports-site-context": "true",
                "@supports-organization-context": "false",
                "description": "Generates and uploads a Bazaarvoice Product Feed that contains Brands, Categories, and Products for the current site.  A separate feed is created for each site.  Supports single locale and multiple locales based on the locale mapping site preference.",
                "module": "int_bazaarvoice/cartridge/scripts/jobs/bvProductExport.js",
                "before-step-function": "beforeStep",
                "total-count-function": "getTotalCount",
                "before-chunk-function": "",
                "read-function": "read",
                "process-function": "process",
                "write-function": "write",
                "after-chunk-function": "",
                "after-step-function": "afterStep",
                "chunk-size": 100,
                "transactional": "false",
                "parameters": {
                    "parameter": []
                },
                "status-codes": {
                    "status": [
                        {
                            "@code": "ERROR",
                            "description": "Used when the step failed with an error."
                        },
                        {
                            "@code": "OK",
                            "description": "Used when the step finished successfully."
                        }
                    ]
                }
            }
        ]
    }
}