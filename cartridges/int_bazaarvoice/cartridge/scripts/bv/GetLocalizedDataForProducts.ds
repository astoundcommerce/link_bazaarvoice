/**
* GetLocalizedDataForProducts.ds
* Get localized product information for the request locale.
* put in the locale map in the product object
*
*
* @input ProductObjects : dw.util.Iterator
* @input LocaleID : String
*
* @output ProductObjects : dw.util.Iterator
*/
var ArrayList = require('dw/util/ArrayList');
var ProductMgr = require('dw/catalog/ProductMgr');
var HashMap = require('dw/util/HashMap');
var Site = require('dw/system/Site');
var URLUtils = require('dw/web/URLUtils');
var URLAction = require('dw/web/URLAction');
var URLParameter = require('dw/web/URLParameter');


var BV_Constants = require('int_bazaarvoice/cartridge/scripts/lib/libConstants').getConstants();
var BVHelper = require('int_bazaarvoice/cartridge/scripts/lib/libBazaarvoice').getBazaarVoiceHelper();

function execute(pdict) {
	var productObjects = pdict.ProductObjects;
	var pObjList = new ArrayList();
	var localeID = pdict.LocaleID;
	
	while(productObjects.hasNext()) {
		var prodObj = productObjects.next();
		var product = ProductMgr.getProduct(prodObj.getProductId());
		
		var localeMap = prodObj.getLocaleMap();
		
		var key = localeID;
		var map = localeMap.containsKey(key)? localeMap.get(key) : new HashMap();
		
		map.put('Name', product.name);		
		map.put('Description', product.shortDescription? product.shortDescription : product.name);
		
		var action = new URLAction('Product-Show', Site.getCurrent().getID(), localeID);
		map.put('ProductPageURL', URLUtils.http(action, new URLParameter('pid', product.ID)));
		
		var prodImage = BVHelper.getImageURL(product, BV_Constants.PRODUCT);
		if(!empty(prodImage)){
	    	map.put('ImageURL', prodImage);
	    }
		
		if(!map.empty){
			localeMap.put(key, map);
		}
		
		prodObj.setLocaleMap(localeMap);
		pObjList.add(prodObj);
	}
	
	pdict.ProductObjects = pObjList.iterator();
    return PIPELET_NEXT;
}
