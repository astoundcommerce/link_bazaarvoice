/**
* bvUploadFeed.ds
*
*	@input Enabled : Boolean
*   @input File : dw.io.File
*	@input RemotePath : String
*	@input RemoteFileName : String
*
*   @output Message : String
*
*/


var Logger = require('dw/system/Logger').getLogger('Bazaarvoice', 'bvUploadFeed.ds');

var BV_Constants = require('int_bazaarvoice/cartridge/scripts/lib/libConstants').getConstants();
var BVHelper = require('int_bazaarvoice/cartridge/scripts/lib/libBazaarvoice').getBazaarVoiceHelper();

function execute(args) {
	args.Message = '';
	
	var Enabled = args.Enabled;
	if (!Enabled) {
	   //If the feed isn't enabled, just return.
	   Logger.info('Product Feed is not enabled, skipping upload...');
	   return PIPELET_NEXT;
	}
	
	var file = args.File;
	var name = args.RemoteFileName;
	var path = args.RemotePath;
		
	try {
		if(empty(path)) {
			throw new Error("Remote Path is empty!");
		}
		
		if(empty(name)) {
			throw new Error("Remote File Name is empty!");
		}
		
		if(file == null) {
			throw new Error("Local File is null!");
		}
		
		var ret = BVHelper.uploadFile(path, name, file, args);
        args.Message = ret;
	}
	catch(ex) {
		Logger.error("Exception caught during localized catalog upload: {0}", ex.message);
        args.Message = StringUtils.format(BV_Constants.MESSAGE_TEMPLATE,"ERROR", "Exception caught during catalog upload: " + ex.message, "", "", "", "", "");         
        return PIPELET_ERROR;
	}
	finally {
		if (file.exists()) {
            //file.remove();
        }
	}

	return PIPELET_NEXT;
}
